{"version":3,"sources":["Components/Title/Title.js","Components/Item/Item.js","Components/List/List.js","constants.js","Components/Footer/Footer.js","Components/CommentList/Comment/Comment.js","Components/CommentList/CommentList.js","Components/AddForm/Input/Input.js","Components/AddForm/AddForm.js","Components/LangSelect/LangSelect.js","Containers/ToDo.js","Components/actions/actionCreator.js","messages.js","Components/App.js","reducers/tasks.js","store.js","reducers/filters.js","reducers/lang.js","reducers/index.js","index.js"],"names":["Title","_ref","title","react_default","a","createElement","className","index_es","id","defaultMessage","defaultProps","Item","text","isCompleted","removeTask","completeTask","selectTask","currentTaskId","commentsAmount","classes","makeStyles","theme","root","width","backgroundColor","palette","background","paper","current","borderLeft","notCurrent","sup","borderRadius","padding","color","fontWeight","marginLeft","useStyles","ListItem_ListItem","button","divider","onClick","style","marginRight","ListItemText","ListItem","tasksList","List","component","map","_ref2","comments","length","Components_Item_Item","key","FILTERS","ACTIONS_TYPE","styles","filter","margin","opacity","filterSecondary","amountLeft","fontFamily","Footer","amount","activeFilter","changeFilter","Fragment","concat","Button","variant","size","Comment","alignItems","ListItemAvatar","primary","CommentList","commentsList","CommentList_Comment_Comment","BootstrapInput","withStyles","label + &","marginTop","spacing","input","position","border","fontSize","transition","transitions","create","join","&:focus","borderColor","boxShadow","InputBase","display","flexWrap","justifyContent","Input","React","forwardRef","props","ref","FormControl","InputLabel","htmlFor","inputRef","AddForm","onSubmit","event","preventDefault","Input_Input","type","LangSelect","lang","handleLangChange","Select","value","onChange","target","LangSelect_BootstrapInput","name","MenuItem","Paper","ToDo","inputAddTask","createRef","inputAddComment","state","handleAddTaskSubmit","_this","addTask","timeStampId","Date","getTime","setState","Object","objectSpread","taskText","handleTaskSelect","handleAddCommentSubmit","addComment","filterTasks","tasks","task","changeLang","this","_this$props","isTasksExist","currentTask","isCommentsExist","filteredTasks","react","Components_LangSelect_LangSelect","Grid","container","item","xs","AddForm_AddForm","List_List","Components_Footer_Footer","Components_CommentList_CommentList","Component","mapDispatchToProps","parentId","connect","messages","en","buttonTitle","all","active","completed","language","ru","uk","App","locale","Components_Title_Title","Containers_ToDo","MY_TASKS","load","namespace","toConsumableArray","preloadedState","arguments","undefined","_ref$comments","push","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","addLocaleData","ReactDOM","render","es","src_Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ef5fbcdf.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst Title = ({ title }) => (\n  <h2 className=\"title\">\n    <FormattedMessage id={title} defaultMessage=\"Title default\" />\n    {/*{title}*/}\n  </h2>\n);\n\nTitle.propTypes = {\n  title: PropTypes.string\n};\n\nTitle.defaultProps = {\n  title: \"Simple title\"\n};\n\nexport default Title;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst Item = ({\n  text,\n  isCompleted,\n  id,\n  removeTask,\n  completeTask,\n  selectTask,\n  currentTaskId,\n  commentsAmount\n}) => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: \"100%\",\n      backgroundColor: theme.palette.background.paper\n    },\n    current: {\n      borderLeft: \"2px solid red\"\n    },\n    notCurrent: {\n      borderLeft: \"2px solid transparent\"\n    },\n    sup: {\n      borderRadius: \"10px\",\n      backgroundColor: \"#3f51b5\",\n      padding: \"0 9px 2px\",\n      color: \"white\",\n      fontWeight: \"600\",\n      marginLeft: \"10px\"\n    }\n  }));\n  const classes = useStyles();\n\n  return (\n    <div>\n      <ListItem\n        button\n        divider\n        className={currentTaskId !== id ? classes.notCurrent : classes.current}\n      >\n        <i\n          className=\"material-icons\"\n          onClick={() => completeTask(id)}\n          style={{ marginRight: 20 }}\n        >\n          {isCompleted ? \"check_circle\" : \"brightness_1\"}\n        </i>\n        <ListItemText onClick={() => selectTask(id)}>\n          <span>{text}</span>\n          {commentsAmount ? (\n            <sup className={classes.sup}>{commentsAmount}</sup>\n          ) : null}\n        </ListItemText>\n        <i className=\"material-icons\" onClick={() => removeTask(id)}>\n          clear\n        </i>\n      </ListItem>\n    </div>\n  );\n};\n\nItem.propTypes = {\n  text: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  removeTask: PropTypes.func,\n  completeTask: PropTypes.func,\n  id: PropTypes.number,\n  currentTaskId: PropTypes.number\n};\n\nItem.defaultProps = {\n  text: \"\",\n  isCompleted: false,\n  removeTask: () => {},\n  completeTask: () => {},\n  id: null,\n  currentTaskId: null\n};\n\nexport default Item;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport List from \"@material-ui/core/List\";\n\nimport { Item } from \"../Item\";\n\nconst ListItem = ({\n  tasksList,\n  removeTask,\n  completeTask,\n  selectTask,\n  currentTaskId\n}) => (\n  <List component=\"ul\">\n    {tasksList.map(({ id, text, isCompleted, comments }) => {\n      const commentsAmount = comments.length;\n      return (\n        <Item\n          currentTaskId={currentTaskId}\n          key={id}\n          id={id}\n          text={text}\n          isCompleted={isCompleted}\n          removeTask={removeTask}\n          completeTask={completeTask}\n          selectTask={selectTask}\n          commentsAmount={commentsAmount}\n        />\n      );\n    })}\n  </List>\n);\n\nListItem.propTypes = {\n  tasksList: PropTypes.array,\n  removeTask: PropTypes.func,\n  completeTask: PropTypes.func,\n  currentTaskId: PropTypes.number\n};\n\nListItem.defaultProps = {\n  tasksList: [],\n  removeTask: () => {},\n  completeTask: () => {},\n  currentTaskId: null\n};\n\nexport default ListItem;\n","export const TASKS = [\n  {\n    id: 1,\n    text: \"Learn ReactJS\",\n    isCompleted: true,\n    comments: [\n      {\n        id: 11,\n        text: \"Lorem ipsum dolor sit amet.\"\n      },\n      {\n        id: 12,\n        text: \"Lorem ipsum dolor sit amet.\"\n      }\n    ]\n  },\n  {\n    id: 2,\n    text: \"Learn Redux\",\n    isCompleted: false,\n    comments: [\n      {\n        id: 11,\n        text: \"Lorem ipsum dolor sit amet.\"\n      },\n      {\n        id: 12,\n        text: \"Lorem ipsum dolor sit amet.\"\n      }\n    ]\n  },\n  {\n    id: 3,\n    text: \"Learn React Router\",\n    isCompleted: false,\n    comments: [\n      {\n        id: 11,\n        text: \"Lorem ipsum dolor sit amet.\"\n      },\n      {\n        id: 12,\n        text: \"Lorem ipsum dolor sit amet.\"\n      }\n    ]\n  }\n];\n\nexport const FILTERS = [\n  {\n    text: \"All\",\n    id: \"all\"\n  },\n  {\n    text: \"Active\",\n    id: \"active\"\n  },\n  {\n    text: \"Completed\",\n    id: \"completed\"\n  }\n];\n\nexport const BASE_FILTER = \"all\";\nexport const BASE_LANG = \"ru\";\n\nexport const ACTIONS_TYPE = {\n  ADD_TASK: \"ADD_TASK\",\n  REMOVE_TASK: \"REMOVE_TASK\",\n  COMPLETE_TASK: \"COMPLETE_TASK\",\n  CHANGE_FILTER: \"CHANGE_FILTER\",\n  ADD_COMMENT: \"ADD_COMMENT\",\n  CHANGE_LANG: \"CHANGE_LANG\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FILTERS } from \"../../constants\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormattedMessage} from \"react-intl\";\n\nconst styles = {\n  filter: {\n    margin: \"10px\",\n    opacity: \"1\"\n  },\n  filterSecondary: {\n    margin: \"10px\",\n    opacity: \"0.5\"\n  },\n  amountLeft: {\n    marginLeft: \"20px\",\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: \"bold\"\n  }\n};\n\nconst Footer = ({ amount, activeFilter, changeFilter }) => {\n  return (\n    <>\n      <span style={styles.amountLeft}>{`${amount} tasks left`}</span>\n      <div className=\"btn-group\">\n        {FILTERS.map(({ text, id }) => (\n          <Button\n            style={id === activeFilter ? styles.filter : styles.filterSecondary}\n            variant=\"outlined\"\n            size=\"small\"\n            color={id === activeFilter ? \"secondary\" : \"primary\"}\n            key={id}\n            id={id}\n            onClick={() => changeFilter(id)}\n          >\n            <FormattedMessage  id={id} defaultMessage='Ok'/>\n          </Button>\n        ))}\n      </div>\n    </>\n  );\n};\n\nFooter.propTypes = {\n  amount: PropTypes.number,\n  filter: PropTypes.string,\n  changeFilter: PropTypes.func\n};\n\nFooter.defaultProps = {\n  amount: null,\n  filter: \"\",\n  changeFilter: () => {}\n};\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\n\nconst Comment = ({ text }) => {\n  return (\n    <>\n      <ListItem alignItems=\"flex-start\" button divider>\n        <ListItemAvatar />\n        <ListItemText primary={<React.Fragment>{text}</React.Fragment>} />\n      </ListItem>\n    </>\n  );\n};\n\nComment.propTypes = {\n  text: PropTypes.string\n};\n\nComment.defaultProps = {\n  text: \"\"\n};\n\nexport default Comment;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Comment } from \"./Comment\";\nimport List from \"@material-ui/core/List\";\n\nconst CommentList = ({ commentsList }) => (\n  <List component=\"ul\">\n    {commentsList.map(({ id, text }) => (\n      <Comment key={id} text={text} />\n    ))}\n  </List>\n);\n\nCommentList.propTypes = {\n  commentsList: PropTypes.array\n};\n\nCommentList.defaultProps = {\n  commentsList: []\n};\n\nexport default CommentList;\n","import React from \"react\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 13,\n    width: \"auto\",\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n}))(InputBase);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nconst Input = React.forwardRef((props, ref) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.margin}>\n      <InputLabel htmlFor=\"age-customized-select\">\n        Minimum 4 symbols.\n      </InputLabel>\n      <BootstrapInput inputRef={ref} />\n    </FormControl>\n  );\n});\n\nexport default Input;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"./Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormattedMessage} from \"react-intl\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginTop: \"32px\"\n  }\n}));\n\nconst AddForm = React.forwardRef(({ onSubmit }, ref) => {\n  const classes = useStyles();\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(event);\n  };\n  return (\n    <form className=\"todo-form-wrapper\" onSubmit={handleSubmit}>\n      <Input ref={ref} />\n      <Button\n        size=\"medium\"\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        <FormattedMessage  id='buttonTitle' defaultMessage='Ok'/>\n      </Button>\n    </form>\n  );\n});\n\nAddForm.propTypes = {\n  onSubmit: PropTypes.func\n};\n\nAddForm.defaultProps = {\n  onSubmit: () => {}\n};\n\nexport default AddForm;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { FormattedMessage } from \"react-intl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  }\n}))(InputBase);\n\nconst LangSelect = ({ lang, handleLangChange }) => {\n    const handleChange = event => {\n        handleLangChange(event.target.value);\n    };\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"age-customized-select\">\n                <FormattedMessage id=\"language\" defaultMessage=\"Select language\" />\n            </InputLabel>\n            <Select\n                value={lang}\n                onChange={handleChange}\n                input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\n            >\n                <MenuItem value=\"\">\n                    <em />\n                </MenuItem>\n                <MenuItem value=\"ru\">Русский</MenuItem>\n                <MenuItem value=\"en\">English</MenuItem>\n                <MenuItem value=\"uk\">Українська</MenuItem>\n            </Select>\n        </FormControl>\n    );\n};\n\nLangSelect.propTypes = {\n    lang: PropTypes.string,\n    handleLangChange: PropTypes.func,\n};\n\nLangSelect.defaultProps = {\n    lang: '',\n    handleLangChange: () => {},\n};\n\nexport default LangSelect;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { List } from \"../Components/List\";\nimport { Footer } from \"../Components/Footer\";\nimport { CommentList } from \"../Components/CommentList\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport {\n  addTask,\n  removeTask,\n  completeTask,\n  changeFilter,\n  addComment,\n  changeLang\n} from \"../Components/actions/actionCreator\";\nimport { AddForm } from \"../Components/AddForm\";\nimport { LangSelect } from \"../Components/LangSelect\";\n\nconst styles = {\n  Paper: {\n    padding: \"20px 0\",\n    margin: \"30px\"\n  }\n};\n\nclass ToDo extends Component {\n  inputAddTask = React.createRef();\n  inputAddComment = React.createRef();\n  state = {\n    currentTaskId: \"\"\n  };\n\n  handleAddTaskSubmit = () => {\n    const {\n      current: { value }\n    } = this.inputAddTask;\n    const { addTask } = this.props;\n    const timeStampId = new Date().getTime();\n    value.length > 3 &&\n      this.setState(\n        state => ({\n          ...state,\n          taskText: value,\n          currentTaskId: timeStampId\n        }),\n        () => {\n          addTask(timeStampId, value, false);\n          this.inputAddTask.current.value = \"\";\n        }\n      );\n  };\n\n  handleTaskSelect = currentTaskId => {\n    this.setState({\n      currentTaskId\n    });\n  };\n\n  handleAddCommentSubmit = () => {\n    const {\n      current: { value }\n    } = this.inputAddComment;\n    const { addComment } = this.props;\n    if (value.length > 3) {\n      const { currentTaskId } = this.state;\n      currentTaskId && addComment(new Date().getTime(), currentTaskId, value);\n      this.inputAddComment.current.value = \"\";\n    }\n  };\n\n  filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case \"completed\":\n        return tasks.filter(task => task.isCompleted);\n      case \"active\":\n        return tasks.filter(task => !task.isCompleted);\n      default:\n        return tasks;\n    }\n  };\n  handleLangChange = value => {\n    this.props.changeLang(value);\n  };\n  render() {\n    const { currentTaskId } = this.state;\n    const {\n      tasks,\n      filter,\n      removeTask,\n      completeTask,\n      changeFilter,\n      lang\n    } = this.props;\n\n    const isTasksExist = tasks && tasks.length > 0;\n\n    const currentTask =\n      isTasksExist && tasks.filter(task => task.id === currentTaskId)[0];\n    const isCommentsExist = currentTask && currentTask.comments.length > 0;\n    const filteredTasks = this.filterTasks(tasks, filter);\n    return (\n      <Fragment>\n        <LangSelect lang={lang} handleLangChange={this.handleLangChange} />\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Paper style={styles.Paper}>\n              <AddForm\n                onSubmit={this.handleAddTaskSubmit}\n                ref={this.inputAddTask}\n              />\n              {isTasksExist && (\n                <List\n                  currentTaskId={currentTaskId}\n                  tasksList={filteredTasks}\n                  removeTask={removeTask}\n                  completeTask={completeTask}\n                  selectTask={this.handleTaskSelect}\n                />\n              )}\n              {isTasksExist && (\n                <Footer\n                  amount={filteredTasks.length}\n                  activeFilter={filter}\n                  changeFilter={changeFilter}\n                />\n              )}\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper style={styles.Paper}>\n              {isCommentsExist && (\n                <CommentList commentsList={currentTask.comments} />\n              )}\n              <AddForm\n                onSubmit={this.handleAddCommentSubmit}\n                ref={this.inputAddComment}\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ tasks, filter, lang }) => ({\n  tasks,\n  filter,\n  lang\n});\n\nconst mapDispatchToProps = {\n  addTask,\n  removeTask,\n  completeTask,\n  changeFilter,\n  addComment,\n  changeLang\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToDo);\n","import { ACTIONS_TYPE } from '../../constants';\r\n\r\nexport const addTask = (id, text, isCompleted) => ({\r\n    type: ACTIONS_TYPE.ADD_TASK,\r\n    id,\r\n    text,\r\n    isCompleted\r\n});\r\n\r\nexport const addComment = (id, parentId, text ) => ({\r\n    type: ACTIONS_TYPE.ADD_COMMENT,\r\n    id,\r\n    parentId,\r\n    text\r\n});\r\n\r\nexport const removeTask = id => ({\r\n    type: ACTIONS_TYPE.REMOVE_TASK,\r\n    id\r\n});\r\n\r\nexport const completeTask = id => ({\r\n    type: ACTIONS_TYPE.COMPLETE_TASK,\r\n    id\r\n});\r\n\r\nexport const changeFilter = activeFilter => ({\r\n    type: ACTIONS_TYPE.CHANGE_FILTER,\r\n    activeFilter,\r\n});\r\n\r\nexport const changeLang = lang => ({\r\n    type: ACTIONS_TYPE.CHANGE_LANG,\r\n    lang,\r\n});\r\n","export default {\r\n    en: {\r\n        'title': 'some title in English',\r\n        'buttonTitle': 'Add',\r\n        'all': 'All',\r\n        'active': 'active',\r\n        'completed': 'completed',\r\n        'language': 'language'\r\n\r\n    },\r\n    ru: {\r\n        'title': 'какойто заголовок на русском',\r\n        'buttonTitle': 'Добавить',\r\n        'all': 'Все',\r\n        'active': 'Активные',\r\n        'completed': 'Завершенные',\r\n        'language': 'Язык'\r\n    },\r\n    uk: {\r\n        'title': 'Найкращий заголовок',\r\n        'buttonTitle': 'Додати',\r\n        'all': 'Усі',\r\n        'active': 'Активні',\r\n        'completed': 'Завершені',\r\n        'language': 'Мова'\r\n    }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\nimport \"./App.scss\";\nimport Title from \"./Title/Title\";\nimport ToDo from \"../Containers/ToDo\";\nimport { IntlProvider } from \"react-intl\";\n// import { changeLang } from \"./actions/actionCreator\";\nimport { connect } from \"react-redux\";\nimport messages from \"../messages\";\n\nclass App extends Component {\n  render() {\n    const { lang } = this.props;\n    return (\n      <IntlProvider\n        locale={lang}\n        messages={messages[lang]}\n      >\n        <Fragment>\n          <Title title=\"title\" />\n          <ToDo />\n        </Fragment>\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({ lang }) => ({\n  lang\n});\n\n// const mapDispatchToProps = {\n//   changeLang\n// };\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);\n","import { ACTIONS_TYPE, TASKS } from \"../constants\";\r\nimport { load } from \"redux-localstorage-simple\";\r\n\r\nlet MY_TASKS = load({ namespace: 'todo-list' });\r\n\r\nif (!MY_TASKS || !MY_TASKS.tasks || !MY_TASKS.tasks.length) {\r\n  MY_TASKS = {\r\n    tasks: [...TASKS],\r\n  }\r\n}\r\n\r\nconst tasks = (state = MY_TASKS.tasks, { id, text, isCompleted, parentId, type, comments=[] }) => {\r\n  switch (type) {\r\n    case ACTIONS_TYPE.ADD_TASK:\r\n      return [\r\n        ...state,\r\n        {\r\n          id,\r\n          text,\r\n          isCompleted,\r\n          comments\r\n        }\r\n      ];\r\n\r\n    case ACTIONS_TYPE.REMOVE_TASK:\r\n      return [...state].filter(task => task.id !== id);\r\n\r\n    case ACTIONS_TYPE.COMPLETE_TASK:\r\n      return [...state].map(task => {\r\n        if (task.id === id) {\r\n          task.isCompleted = !task.isCompleted;\r\n        }\r\n        return task;\r\n      });\r\n    case ACTIONS_TYPE.ADD_COMMENT:\r\n      return [...state].map(task => {\r\n        if (task.id === parentId) {\r\n          task.comments.push({ id, text });\r\n        }\r\n        return task;\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasks;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { save } from \"redux-localstorage-simple\";\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  typeof window === \"object\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState =>\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(save({ namespace: \"todo-list\" })))\r\n  );\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","import { ACTIONS_TYPE, BASE_FILTER } from \"../constants\";\r\n\r\nconst filter = (state = BASE_FILTER, { type, activeFilter }) => {\r\n  switch (type) {\r\n    case ACTIONS_TYPE.CHANGE_FILTER:\r\n      return activeFilter;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filter;\r\n","import { BASE_LANG, ACTIONS_TYPE } from \"../constants\";\n\nconst lang = (state = BASE_LANG, { type, lang }) => {\n  switch (type) {\n    case ACTIONS_TYPE.CHANGE_LANG:\n      return lang;\n    default:\n      return state;\n  }\n};\n\nexport default lang;\n","import { combineReducers } from \"redux\";\r\nimport tasks from \"./tasks\";\r\nimport filter from \"./filters\";\r\nimport lang from \"./lang\";\r\n\r\nconst rootReducer = combineReducers({ tasks, filter, lang });\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"typeface-roboto\";\nimport \"./index.scss\";\nimport App from \"./Components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { addLocaleData } from 'react-intl';\nimport en from \"react-intl/locale-data/en\";\nimport ru from \"react-intl/locale-data/ru\";\nimport uk from \"react-intl/locale-data/uk\";\n\naddLocaleData(en);\naddLocaleData(ru);\naddLocaleData(uk);\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}